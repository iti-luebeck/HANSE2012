#! /usr/bin/env python
# Gamepad configuration

PACKAGE='hanse_pingerdetection'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                        Type      Level Description                                     Default  Min  Max
gen.add("publish_frequency",        int_t,    0,    "how often to send data to server",             1,0,10000)
gen.add("omega",        double_t,    0,    "Desired frequency to detect",             15000,1000,25000)

sampleRate_enum = gen.enum([gen.const("8000", int_t, 8000, "8000 Hz samplerate"),
                       gen.const("11025", int_t, 11025, "11025 Hz samplerate"),
                       gen.const("22050", int_t, 22050, "22050 Hz samplerate"),
                       gen.const("44100", int_t, 44100, "44100 Hz samplerate"),
                       gen.const("48000", int_t, 48000, "48000 Hz samplerate")],
                      "Valid samplerates")

gen.add("sampleRate", int_t, 0, "Sample rate", 48000, 8000, 48000, edit_method=sampleRate_enum)

gen.add("window",        int_t,    0,    "Sliding window for goertzel",             480, 1, 10000)
gen.add("threshold",        double_t,    0,    "Threshold for the detection of a ping",             0.5,0.0, 10000)
gen.add("scale",        double_t,    0,    "Factor for smaller range of values",             0.00001525878,0.0, 1.0)

gen.add("noiseLeft",        double_t,    0,    "Subtraction of noise for left hydro",             0.0,0.0, 1.0)
gen.add("noiseRight",        double_t,    0,    "Subtraction of noise for right hydro",             0.0, 0.0, 1.0)
gen.add("samplesPerPixelRaw",        int_t,    0,    "Plot samples per pixel raw",             100,1,10000)
gen.add("samplesPerPixelGoertzel",        int_t,    0,    "Plot samples per pixel goertzel",             100,1,10000)
gen.add("counterRaw",        int_t,    0,    "Plot raw update rate",             100,1,10000)
gen.add("counterGoertzel",        int_t,    0,    "Plot goertzel update rate",             100,1,10000)
gen.add("plotRaw",        bool_t,    0,    "Plot raw data",             False)
gen.add("plotGoertzel",        bool_t,    0,    "Plot goertzel",             False)
gen.add("lognr",        int_t,    0,    "Lognumber for data save",             1,1,10000)
gen.add("saveData",        bool_t,    0,    "Save data",             True)
gen.add("plotAnalysis",        bool_t,    0,    "Plot analysis data",             True)
gen.add("fetteSkalierung",        double_t,    0,    "Factor for scaling left micro",             0.4846,0.0, 10.0)


exit(gen.generate(PACKAGE, "pingerdetection_node", "PingerdetectionNode"))
