#! /usr/bin/env python
# Gamepad configuration

PACKAGE='hanse_pingerdetection'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                        Type      Level Description                                     Default  Min  Max
gen.add("publish_frequency",        int_t,    0,    "how often to send data to server",             1)
gen.add("omega",        double_t,    0,    "Desired frequency to detect",             15000)
gen.add("sampleRate",        int_t,    0,    "Samples per second",             48000)
gen.add("window",        int_t,    0,    "Sliding window for goertzel",             480)
gen.add("threshold",        double_t,    0,    "Threshold for the detection of a ping",             0.5)
gen.add("scale",        double_t,    0,    "Factor for smaller range of values",             0.00001)
gen.add("noiseLeft",        double_t,    0,    "Subtraction of noise for left hydro",             0.0)
gen.add("noiseRight",        double_t,    0,    "Subtraction of noise for right hydro",             0.0)
gen.add("samplesPerPixelRaw",        int_t,    0,    "Plot samples per pixel raw",             100)
gen.add("samplesPerPixelGoertzel",        int_t,    0,    "Plot samples per pixel goertzel",             100)
gen.add("counterRaw",        int_t,    0,    "Plot raw update rate",             100)
gen.add("counterGoertzel",        int_t,    0,    "Plot goertzel update rate",             100)
gen.add("plotRaw",        bool_t,    0,    "Plot raw data",             False)
gen.add("plotGoertzel",        bool_t,    0,    "Plot goertzel",             False)
gen.add("saveData",        bool_t,    0,    "Save data local",             False)
gen.add("detection",        bool_t,    0,    "Enable/disable pingerdetection",             False)



exit(gen.generate(PACKAGE, "pingerdetection_node", "PingerdetectionNode"))
