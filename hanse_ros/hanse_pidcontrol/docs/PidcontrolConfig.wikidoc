# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~publish_frequency
0.default= 1.0
0.type= double
0.desc=how often to send data to server Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
1.name= ~k_p
1.default= 1.0
1.type= double
1.desc=p part of pid control Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
2.name= ~k_i
2.default= 1.0
2.type= double
2.desc=i part of pid control Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
3.name= ~k_d
3.default= 1.0
3.type= double
3.desc=d part of pid control Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
4.name= ~bias
4.default= 1.0
4.type= double
4.desc=bias value for output Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
5.name= ~i_max
5.default= 1.0
5.type= double
5.desc=maximum value for integral part Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
6.name= ~output_min
6.default= 1.0
6.type= double
6.desc=minimal output value Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
7.name= ~output_max
7.default= 1.0
7.type= double
7.desc=maximal output value Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
8.name= ~angular
8.default= False
8.type= bool
8.desc=should error be calculated as a circle value 
}
}
# End of autogenerated section. You may edit below.
