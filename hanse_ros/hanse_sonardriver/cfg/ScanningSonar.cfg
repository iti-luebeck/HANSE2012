#!/usr/bin/env python2.7

PACKAGE='hanse_sonardriver'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

range_enum = gen.enum([gen.const("5m", int_t, 5, "Range of 5m"),
                       gen.const("10m", int_t, 10, "Range of 10m"),
                       gen.const("20m", int_t, 20, "Range of 20m"),
                       gen.const("30m", int_t, 30, "Range of 30m"),
                       gen.const("40m", int_t, 40, "Range of 40m"),
                       gen.const("50m", int_t, 50, "Range of 50m")],
                      "Valid range values")

gen.add("range", int_t, 0, "range", 50, 5, 50, edit_method=range_enum)
gen.add("start_gain", int_t, 0, "startGain", 15, 0, 40)
gen.add("train_angle", int_t, 0, "trainAngle", 70, 0, 140)
gen.add("sector_width", int_t, 0, "sectorWidth", 120, 0, 120)
gen.add("step_size", int_t, 0, "stepSize", 2, 0, 2)
gen.add("pulse_length", int_t, 0, "pulseLength", 127, 1, 252)

data_points_enum = gen.enum([gen.const("252_Points", int_t, 25, "252 Points"),
                             gen.const("500_Points", int_t, 25, "500 Points")],
                            "Number of data points")

gen.add("data_points", int_t, 0, "dataPoints", 25, 25, 50, edit_method=data_points_enum)
gen.add("switch_delay", int_t, 0, "switchDelay", 0, 0, 252)

frequency_enum = gen.enum([gen.const("675_kHz", int_t, 0, "675 kHz"),
                           gen.const("850_kHz", int_t, 135, "850 kHz")],
                          "Sonar frequency")

gen.add("frequency", int_t, 0, "frequency", 0, 0, 135, edit_method=frequency_enum)

exit(gen.generate(PACKAGE, "sonardriver", "ScanningSonar"))
