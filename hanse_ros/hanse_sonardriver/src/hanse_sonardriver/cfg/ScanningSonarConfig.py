## *********************************************************
## 
## File autogenerated for the hanse_sonardriver package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 233, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 259, 'description': 'range', 'max': 50, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'range', 'edit_method': "{'enum_description': 'Valid range values', 'enum': [{'srcline': 10, 'description': 'Range of 5m', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': '5m'}, {'srcline': 11, 'description': 'Range of 10m', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': '10m'}, {'srcline': 12, 'description': 'Range of 20m', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 20, 'ctype': 'int', 'type': 'int', 'name': '20m'}, {'srcline': 13, 'description': 'Range of 30m', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 30, 'ctype': 'int', 'type': 'int', 'name': '30m'}, {'srcline': 14, 'description': 'Range of 40m', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 40, 'ctype': 'int', 'type': 'int', 'name': '40m'}, {'srcline': 15, 'description': 'Range of 50m', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 50, 'ctype': 'int', 'type': 'int', 'name': '50m'}]}", 'default': 50, 'level': 0, 'min': 5, 'type': 'int'}, {'srcline': 259, 'description': 'startGain', 'max': 40, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'start_gain', 'edit_method': '', 'default': 15, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'trainAngle', 'max': 140, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'train_angle', 'edit_method': '', 'default': 70, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'sectorWidth', 'max': 120, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'sector_width', 'edit_method': '', 'default': 120, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'stepSize', 'max': 2, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'step_size', 'edit_method': '', 'default': 2, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'pulseLength', 'max': 252, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'pulse_length', 'edit_method': '', 'default': 127, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 259, 'description': 'dataPoints', 'max': 50, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'data_points', 'edit_method': "{'enum_description': 'Number of data points', 'enum': [{'srcline': 25, 'description': '252 Points', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 25, 'ctype': 'int', 'type': 'int', 'name': '252_Points'}, {'srcline': 26, 'description': '500 Points', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 25, 'ctype': 'int', 'type': 'int', 'name': '500_Points'}]}", 'default': 25, 'level': 0, 'min': 25, 'type': 'int'}, {'srcline': 259, 'description': 'switchDelay', 'max': 252, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'switch_delay', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'frequency', 'max': 135, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'frequency', 'edit_method': "{'enum_description': 'Sonar frequency', 'enum': [{'srcline': 32, 'description': '675 kHz', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': '675_kHz'}, {'srcline': 33, 'description': '850 kHz', 'srcfile': '../cfg/ScanningSonar.cfg', 'cconsttype': 'const int', 'value': 135, 'ctype': 'int', 'type': 'int', 'name': '850_kHz'}]}", 'default': 135, 'level': 0, 'min': 0, 'type': 'int'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])    
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

ScanningSonar_5m = 5
ScanningSonar_10m = 10
ScanningSonar_20m = 20
ScanningSonar_30m = 30
ScanningSonar_40m = 40
ScanningSonar_50m = 50
ScanningSonar_252_Points = 25
ScanningSonar_500_Points = 25
ScanningSonar_675_kHz = 0
ScanningSonar_850_kHz = 135
