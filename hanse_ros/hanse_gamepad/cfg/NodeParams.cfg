#! /usr/bin/env python
# Gamepad configuration

PACKAGE='hanse_gamepad'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                        Type      Level Description                                     Default  Min  Max
gen.add("publish_frequency",        int_t,    0,    "how often to send data to server",             1)
gen.add("gamepad_switch_button",    int_t,    0,    "button to enable hand control",                1)
gen.add("joy_deadzone",             double_t, 0,    "min raw joystick value to be considered != 0", 1)
gen.add("linear_axis",              int_t,    0,    "axis for linear speed",                        1)
gen.add("linear_scale",             double_t, 0,    "scale factor for linear speed",                1)
gen.add("angular_axis",             int_t,    0,    "axis for angular speed",                       1)
gen.add("angular_scale",            double_t, 0,    "scale factor for angular speed",               1)
gen.add("depth_up_button",          int_t,    0,    "button to go up",                              1)
gen.add("depth_down_button",        int_t,    0,    "button to go down",                            1)
gen.add("depth_delta",              double_t, 0,    "increment to go up/down in each step",         1)
gen.add("zero_depth_reset_button",  int_t,    0,    "resets the pressure for water surface",        1)
gen.add("motor_switch_button",      int_t,    0,    "switch motors between ready and off",          1)
gen.add("pid_switch_button",        int_t,    0,    "switch pid's between all off and last on",     1)
gen.add("emergency_stop_button",    int_t,    0,    "button for emergency stop",                    1)

exit(gen.generate(PACKAGE, "gamepad_node", "GamepadNode"))
